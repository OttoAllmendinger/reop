
An (in)formal specification for reop file formats

Base components:
Algorithm - algorithm are specified with two byte indentifiers, usually ASCII
letters related to the algorithm name
Random ID - An opaque key identifier. 8 random bytes.
Identity - A string that identifies the user. Stored outside the base64 data.

General format:
Most files are ASCII, with binary data encoded via base64. File sections are
separated with line separators.

Keys:
Every reop key consists of two curve25519 keys. One is used for encryption.
One is used for signing.

Secret (private) key:
	uint8_t sigalg[2] - Signature key algorithm (Ed)
	uint8_t encalg[2] - Encryption key algorithm (CS)
	uint8_t symalg[2] - Symmetric algorithm. Used to encrypt key itself. (SP)
	uint8_t kdfalg[2] - KDF to derive encryption key (BK)
	uint8_t randomid[8] - 8 bytes used to fast check for mismatches
		[Following fields depend (in theory) on algorithms above]
	uint32_t kfdrounds - big endian
	uint8_t salt[16] - For KDF
	uint8_t box[40] - The extra data for key self encryption
	uint8_t sigkey[64] - The signature key itself
	uint8_t enckey[32] - The encryption key itself

Secret keys are always encrypted. (No password "unencrypted" keys, specified
by setting kdfrounds to 0, are encrypted with a key of zeros.) The box
consists of a 24 byte random nonce and a 16 byte tag.

Public key:
        uint8_t sigalg[2];
        uint8_t encalg[2];
        uint8_t randomid[8];
        uint8_t sigkey[32];
        uint8_t enckey[32];

Note that sigkey is only half the size as in the secret key. (The secret
version includes the public key as well).

The sigkey and enckey fields are initialized as per nacl/sodium.
(Implementation defined, not specified here.)

Base64 key encoding:
Keys are preferentially stored in base64 format. The above data is base64
encoded, and then wrapped in REOP guards. An ident line is mandatory and
used to identify the owner of the key; e.g. to match a signature with the
correct public key for verification. There is no space after "ident:".
The remainder of the line is 64 bytes of ASCII or possibly UTF-8 text.
The identifier is not interpreted by reop, but should be human friendly.

-----BEGIN REOP SECRET KEY-----
ident:identifier up to 64 bytes
base64 encoded data, ideally wrapped to 76 char lines
-----END REOP SECRET KEY-----

Public keys are as above, but say PUBLIC KEY.

Key files:
The reop application supports specifying keys on the command line in addition
to reading them from a default ~/.repo location. Most key files consist of a
single key. The exception is a keyring file. Multiple public keys (in base64
format) may be concatenated into one file.

